# Configuration file
# key = value
quarkus.smallrye-openapi.path=/swagger
quarkus.resteasy.path=/api


#configuração banco de dados postgres
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=mysecretpassword
quarkus.datasource.jdbc.url=jdbc:tracing:postgresql://localhost:5432/todolist
#quarkus.datasource.jdbc.max-size=16
quarkus.datasource.jdbc.driver=io.opentracing.contrib.jdbc.TracingDriver
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
quarkus.hibernate-orm.database.generation=update
#quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script= import.sql

#configuração banco de dados H2 Produção
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.username = hibernate
%test.quarkus.datasource.password = hibernate
%test.quarkus.datasource.jdbc.url=jdbc:tracing:h2::file:../../../databaseteste;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE
%test.quarkus.datasource.jdbc.driver=io.opentracing.contrib.jdbc.TracingDriver
%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.sql-load-script= import-test.sql

#Configuração do JEAGER
quarkus.jaeger.service-name=todoapi
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.jaeger.endpoint=http://localhost:14268/api/traces
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

# Configuração do Cors
#quarkus.http.cors= true
#quarkus.http.cors.origins= http://localhost:8000
#quarkus.http.cors.headers= accept, authorization, content-type, x-requested-with
#quarkus.http.cors.methods= GET, OPTIONS, POST, DELETE, PUT